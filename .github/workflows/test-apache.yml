name: Deploy WordPress with Public Access

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'How long to keep the site running (in minutes)'
        required: false
        default: '30'
        type: string

jobs:
  deploy-wordpress:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
    
    - name: Install ngrok
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install ngrok
        
        # Configure ngrok with auth token
        ngrok config add-authtoken ${{ secrets.NGROK_AUTHTOKEN }}
    
    - name: Build and start WordPress
      run: |
        cd docker
        docker-compose up -d --build
        
        # Wait for services to be healthy
        echo "Waiting for services to start..."
        timeout 120 bash -c 'until docker-compose ps | grep "healthy"; do sleep 5; echo "Still waiting..."; done' || echo "Health check timeout"
        
        # Test Apache configuration
        docker-compose exec -T wordpress apache2ctl configtest
        
        # Show container status
        docker-compose ps
    
    - name: Start ngrok tunnel
      run: |
        # Start ngrok in background
        ngrok http 8080 --log stdout > ngrok.log 2>&1 &
        NGROK_PID=$!
        
        # Wait for ngrok to start and get the URL
        sleep 10
        
        # Extract the public URL
        NGROK_URL=$(curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
        
        echo "ðŸš€ WordPress is now accessible at:"
        echo "Public URL: $NGROK_URL"
        echo "Local URL: http://localhost:8080"
        echo ""
        echo "Database Access:"
        echo "Host: localhost"
        echo "Port: 3306"
        echo "Database: wordpress"
        echo "Username: wpuser"
        echo "Password: wppass"
        echo ""
        echo "Site will remain active for ${{ github.event.inputs.duration }} minutes"
        
        # Test the public URL
        sleep 5
        curl -f "$NGROK_URL" || echo "Public URL not yet accessible"
        
        # Keep the tunnel running
        echo "Keeping the site running for ${{ github.event.inputs.duration }} minutes..."
        DURATION_SECONDS=$(((${{ github.event.inputs.duration }} * 60)))
        
        # Show logs in background
        cd docker
        docker-compose logs -f &
        LOGS_PID=$!
        
        # Wait for specified duration
        sleep $DURATION_SECONDS
        
        # Stop background processes
        kill $LOGS_PID 2>/dev/null || true
        kill $NGROK_PID 2>/dev/null || true
        
        echo "Time limit reached. Shutting down..."
    
    - name: Show final logs
      if: always()
      run: |
        cd docker
        echo "=== Final Container Status ==="
        docker-compose ps
        echo "=== Recent Logs ==="
        docker-compose logs --tail=20
        echo "=== Ngrok Logs ==="
        cat ngrok.log || echo "No ngrok logs found"
    
    - name: Cleanup
      if: always()
      run: |
        cd docker
        docker-compose down -v
        docker system prune -f
        pkill ngrok || true