name: Deploy WordPress with Public Access

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'How long to keep the site running (in minutes)'
        required: false
        default: '30'
        type: string

jobs:
  deploy-wordpress:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
    
    - name: Setup ngrok
      uses: ngrok/ngrok-action@v1
      with:
        authtoken: ${{ secrets.NGROK_AUTHTOKEN }}
        tunnel: http 8080
        args: --log stdout
      id: ngrok
    
    - name: Build and start WordPress
      run: |
        cd docker
        docker-compose up -d --build
        
        # Wait for services to be healthy
        echo "Waiting for services to start..."
        timeout 120 bash -c 'until docker-compose ps | grep "healthy"; do sleep 5; echo "Still waiting..."; done' || echo "Health check timeout"
        
        # Test Apache configuration
        docker-compose exec -T wordpress apache2ctl configtest
        
        # Verify local access
        curl -f http://localhost:8080 || echo "Local access failed"
        
        # Show container status
        docker-compose ps
    
    - name: Display Access Information
      run: |
        echo "ðŸš€ WordPress is now accessible at:"
        echo "Public URL: ${{ steps.ngrok.outputs.tunnel-url }}"
        echo "Local URL: http://localhost:8080"
        echo ""
        echo "Database Access:"
        echo "Host: localhost"
        echo "Port: 3306"
        echo "Database: wordpress"
        echo "Username: wpuser"
        echo "Password: wppass"
        echo ""
        echo "Site will remain active for ${{ github.event.inputs.duration }} minutes"
    
    - name: Keep site running
      run: |
        echo "Site is now live and accessible via the ngrok URL above"
        echo "Keeping the site running for ${{ github.event.inputs.duration }} minutes..."
        
        # Convert minutes to seconds
        DURATION_SECONDS=$(((${{ github.event.inputs.duration }} * 60)))
        
        # Show logs in background
        docker-compose logs -f &
        LOGS_PID=$!
        
        # Wait for specified duration
        sleep $DURATION_SECONDS
        
        # Stop background logs
        kill $LOGS_PID 2>/dev/null || true
        
        echo "Time limit reached. Shutting down..."
      working-directory: docker
    
    - name: Show final logs
      if: always()
      run: |
        cd docker
        echo "=== Final Container Status ==="
        docker-compose ps
        echo "=== Recent Logs ==="
        docker-compose logs --tail=20
    
    - name: Cleanup
      if: always()
      run: |
        cd docker
        docker-compose down -v
        docker system prune -f